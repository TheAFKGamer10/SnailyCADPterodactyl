{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-06-27T12:31:40-05:00",
    "name": "SnailyCAD",
    "author": "mail+petroegg@afkhosting.win",
    "description": "A Pterodactyl version of SnailyCad v4.\r\nSnailyCAD is an open source Computer Aided Dispatch (CAD) for FiveM, this is a web based integration for communities who love police roleplaying and dispatching.\r\nMore info at https:\/\/snailycad.org\/",
    "features": null,
    "docker_images": {
        "Nodejs 20": "ghcr.io\/theafkgamer10\/snailycadpterodactyl:latest"
    },
    "file_denylist": [],
    "startup": "pnpm install && node scripts/copy-env.mjs --client --api && pnpm run build > logs/buildout.txt && if [ -f ./modules/cloudflared/start.sh ]; then bash ./modules/cloudflared/start.sh; fi && pnpm run start",
    "config": {
        "files": "{\r\n    \".env\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"CORS_ORIGIN_URL\": \"CORS_ORIGIN_URL=\\\"{{server.build.env.CLIENT_URL}}\\\"\",\r\n            \"NEXT_PUBLIC_CLIENT_URL\": \"NEXT_PUBLIC_CLIENT_URL=\\\"{{server.build.env.CLIENT_URL}}\\\"\",\r\n            \"NEXT_PUBLIC_PROD_ORIGIN\": \"NEXT_PUBLIC_PROD_ORIGIN=\\\"{{server.build.env.API_URL}}\/v1\\\"\",\r\n            \"DOMAIN\": \"DOMAIN=\\\"{{server.build.env.DOMAIN}}\\\"\",\r\n            \"SECURE_COOKIES_FOR_IFRAME\": \"SECURE_COOKIES_FOR_IFRAME=\\\"{{server.build.env.SECURE_COOKIES_FOR_IFRAME}}\\\"\",\r\n            \"PORT_API\": \"PORT_API={{server.build.env.API_PORT}}\",\r\n            \"PORT_CLIENT\": \"PORT_CLIENT={{server.build.env.CLIENT_PORT}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"SnailyCADv4 is running with version\"\r\n}",
        "logs": "{}",
        "stop": "^C^C"
    },
    "scripts": {
        "installation": {
            "script": "apt update\r\napt install -y git curl wget jq\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\n\r\nmkdir -p tmp logs modules\/cloudflared\r\ncurl -L -o \/mnt\/server\/modules\/cloudflared\/start.sh https:\/\/raw.githubusercontent.com\/TheAFKGamer10\/SnailyCADPterodactyl\/main\/modules\/cloudflared\/start.sh\r\n\r\n# Fetch random secrets\r\nSECRET=$(curl -s 'https:\/\/www.random.org\/strings\/?num=1&len=32&digits=on&upperalpha=on&loweralpha=on&unique=on&format=plain' | tr -d '\\n\\r')\r\nPASS=$(curl -s 'https:\/\/www.random.org\/strings\/?num=1&len=20&digits=on&upperalpha=on&loweralpha=on&unique=on&format=plain' | tr -d '\\n\\r')\r\n\r\n# Clone the repository\r\necho \"Cloning\"\r\ngit clone https:\/\/github.com\/SnailyCAD\/snaily-cadv4.git\r\ncp -rf snaily-cadv4\/. .\r\nrm -rf snaily-cadv4\r\ncp .env.example .env\r\n\r\n# Update .env file\r\necho \"Changing ENV\"\r\nsed -i \"s|POSTGRES_PASSWORD=.*|POSTGRES_PASSWORD=\\\"$PASS\\\"|\" .env\r\nsed -i \"s|POSTGRES_USER=.*|POSTGRES_USER=\\\"snailycad\\\"|\" .env\r\nsed -i \"s|JWT_SECRET=.*|JWT_SECRET=\\\"$SECRET\\\"|\" .env\r\nsed -i \"s|ENCRYPTION_TOKEN=.*|ENCRYPTION_TOKEN=\\\"$SECRET\\\"|\" .env\r\nsed -i \"s|CORS_ORIGIN_URL=.*|CORS_ORIGIN_URL=\\\"$CLIENT_URL\\\"|\" .env\r\nsed -i \"s|NEXT_PUBLIC_CLIENT_URL=.*|NEXT_PUBLIC_CLIENT_URL=\\\"$CLIENT_URL\\\"|\" .env\r\nsed -i \"s|NEXT_PUBLIC_PROD_ORIGIN=.*|NEXT_PUBLIC_PROD_ORIGIN=\\\"$API_URL\/v1\\\"|\" .env\r\nsed -i \"s|PORT_CLIENT=.*|PORT_CLIENT=\\\"$CLIENT_PORT\\\"|\" .env\r\nsed -i \"s|PORT_API=.*|PORT_API=\\\"$API_PORT\\\"|\" .env\r\nsed -i \"s|DOMAIN=.*|DOMAIN=\\\"$DOMAIN\\\"|\" .env\r\nsed -i \"s|SECURE_COOKIES_FOR_IFRAME=.*|SECURE_COOKIES_FOR_IFRAME=\\\"$SECURE_COOKIES_FOR_IFRAME\\\"|\" .env\r\n\r\necho -e \"Install Complete\"\r\nexit 0",
            "container": "debian:latest",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "CLIENT URL",
            "description": "The URL\/IP to where the CAD is hosted at, see examples below.\r\n\r\nIn support, this will be called the client.\r\nValid Examples:\r\nhttps:\/\/cad.example.com - subdomain\r\nhttps:\/\/mycad.com - Top level domain\r\nhttp:\/\/192.168.0.190:3000 - LAN IP-address\r\nhttp:\/\/83.39.20.30:3000 - WAN IP-address\r\n\r\nInvalid Examples:\r\nlocalhost - will simply not work.\r\ncad.example.com - missing https:\/\/ or http:\/\/.\r\nhttp:\/\/192.168.x.x:3000 - default URL, will not work.",
            "env_variable": "CLIENT_URL",
            "default_value": "http:\/\/localhost",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|url|regex:\/^https?:\\\/\\\/[^\\\/]+(:[0-9]+)?$\/",
            "field_type": "text"
        },
        {
            "name": "API URL",
            "description": "The URL\/IP to where the API is hosted at, see examples below.\r\n\r\nIn support, this will be called the API.\r\nValid Examples:\r\nhttps:\/\/cad-api.example.com\/v1 - subdomain\r\nhttp:\/\/192.168.0.190:8080\/v1 - LAN IP-address\r\nhttp:\/\/83.39.20.30:8080\/v1 - WAN IP-address\r\n\r\nInvalid Examples:\r\nlocalhost - will simply not work.\r\ncad-api.example.com - missing https:\/\/ or http:\/\/.\r\nhttp:\/\/192.168.x.x:8080\/v1 - default URL, will not work.",
            "env_variable": "API_URL",
            "default_value": "http:\/\/localhost",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|url|regex:\/^https?:\\\/\\\/[^\\\/]+(:[0-9]+)?$\/",
            "field_type": "text"
        },
        {
            "name": "CLIENT PORT",
            "description": "The port where the client should run on.",
            "env_variable": "CLIENT_PORT",
            "default_value": "39600",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "API PORT",
            "description": "The port where the API should run on.",
            "env_variable": "API_PORT",
            "default_value": "39600",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "DOMAIN",
            "description": "The domain you might be using. (Optional, however, recommended)\r\n\r\nYou may only set this when using a domain name.\r\nThis must be the TLD of the domain. (e.g.: example.com or mycommunity.com)\r\n\r\nValid Examples:\r\nexample.com\r\nexample.com:3000 - a port can only be used when using a domain without SSL (https).\r\n\r\nInvalid Examples:\r\ncad.example.com - subdomain cannot be used. must be top level domain\r\n192.38.33.29 - an IP is not a domain",
            "env_variable": "DOMAIN",
            "default_value": "afkhosting.win",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:36|nullable",
            "field_type": "text"
        },
        {
            "name": "SECURE COOKIES",
            "description": "Only enable when uterly required. (This may not work all the time; work-in-progress.)",
            "env_variable": "SECURE_COOKIES_FOR_IFRAME",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:5|in:true,false",
            "field_type": "text"
        },
        {
            "name": "Enable Cloudflared Tunnel",
            "description": "Set to true to start the Cloudflared tunnel on container startup, or false to skip it.",
            "env_variable": "CLOUDFLARED_STATUS",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Cloudflared Tunnel Token",
            "description": "Cloudflared Tunnel token (from Cloudflare dashboard)",
            "env_variable": "CLOUDFLARED_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|regex:\/^[A-Za-z0-9_-]+$\/",
            "field_type": "text"
        }
    ]
}